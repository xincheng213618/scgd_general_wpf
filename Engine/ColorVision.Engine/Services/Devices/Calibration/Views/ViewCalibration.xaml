<UserControl  x:Class="ColorVision.Engine.Services.Devices.Calibration.Views.ViewCalibration"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.Engine.Services.Devices.Calibration.Views"
             xmlns:se="clr-namespace:ColorVision.Engine.Services"
             xmlns:properties="clr-namespace:ColorVision.Engine.Properties"
             xmlns:im="clr-namespace:ColorVision.ImageEditor;assembly=ColorVision.ImageEditor"
             xmlns:vm="clr-namespace:ColorVision.Common.MVVM;assembly=ColorVision.Common"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:ViewCalibrationConfig}"
             d:DesignHeight="450" d:DesignWidth="800" Background="{DynamicResource BorderBrush}" Initialized="UserControl_Initialized">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="ToolTip" Value="{ Binding Text,RelativeSource={RelativeSource Self}}"/>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="MainGridRow1"  Height="*"/>
            <RowDefinition x:Name="MainGridRow2" Height="Auto"/>
        </Grid.RowDefinitions>
        <im:ImageView Grid.Row="0" x:Name="ImageView"></im:ImageView>
        <Grid x:Name="Grid1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ToolBarTray  Grid.Row="0" IsLocked="True" >
                <ToolBar Band="0" BandIndex="0" Padding="3,2" Margin="0,0,2,0">
                    <ToggleButton  Style="{StaticResource ToggleButtonSwitch}" Margin="0,0,2,0"  IsChecked="{Binding IsShowListView, Converter={StaticResource Boolean2BooleanReConverter}}"/>
                    <Button Content="{x:Static properties:Resources.Inquire}" Click="SearchAdvanced_Click" Margin="0,0,2,0"/>
                    <Button x:Name="Search" Content="{x:Static properties:Resources.AdvanceSearch}" Click="Search1_Click" Margin="0,0,2,0"/>
                </ToolBar>
            </ToolBarTray>
            <StackPanel HorizontalAlignment="Right"  Orientation="Horizontal">
                <Button Click="Button_Click" Padding="2" Height="25" Width="25" Margin="0,1,5,0">
                    <Rectangle Width="16" Height="16" Fill="{StaticResource DISave}" />
                </Button>
                <Button  Command="{Binding ClearListCommand}" Padding="2" Height="25" Width="25">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" To="0.7" Duration="0:0:0.1" AutoReverse="True" />
                                    <DoubleAnimation  Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" To="0.7" Duration="0:0:0.1" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                    <Image  Stretch="Uniform" Source="{DynamicResource DrawingImageDelete}" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                        </Image.RenderTransform>
                    </Image>
                </Button>
                <Button Grid.Column="1" Margin="5,1,5,0" HorizontalAlignment="Left" Command="{Binding EditCommand}" Padding="2" Height="25" Width="25" >
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="rotateTransform2" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                    <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}"  RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <RotateTransform x:Name="rotateTransform2" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Button>
            </StackPanel>
            <ListView Grid.Row="1" x:Name="listView1" BorderThickness="0" Padding="0" Height="{Binding Height}"  Visibility="{Binding IsShowListView, Converter={StaticResource bool2VisibilityConverter}}" SelectionChanged="listView1_SelectionChanged"  PreviewKeyDown="listView1_PreviewKeyDown" >
                <ListView.Resources >
                    <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu_Opened" />
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemBaseStyle.Small}">
                        <Setter Property="ContextMenu" Value="{Binding ContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View >
                    <GridView >
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource  GridViewColumnHeaderBase}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                <EventSetter Event="Click" Handler="GridViewColumnSort"/>
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn  Header="{x:Static properties:Resources.SerialNumber1}" Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{Binding Id}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Header="bool" Width="40">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{ Binding  IsFileExists}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Header="{x:Static properties:Resources.Info}" Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{ Binding  ResultMsg}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Header="{x:Static properties:Resources.File}" Width="120">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{ Binding  FileUrl}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Header="{x:Static properties:Resources.Result}" Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{ Binding  ResultCode}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Header="{x:Static properties:Resources.ImageInfo}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{ Binding  ImgFrameInfo}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Header="{x:Static properties:Resources.Duration}" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{ Binding  TotalTime}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Header="{x:Static properties:Resources.Parameter}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="{x:Type se:ViewResultImage}">
                                    <TextBlock Text="{ Binding   ReqParams}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                    </GridView>
                </ListView.View>

            </ListView>
        </Grid>
        <GridSplitter Grid.Row="1" Panel.ZIndex="999" Background="#1FFFFFFF"  Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Top"  DragCompleted="GridSplitter_DragCompleted" />
    </Grid>
</UserControl>
