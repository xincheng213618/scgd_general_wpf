<UserControl x:Class="ColorVision.Engine.Services.Devices.Spectrum.DisplaySpectrum"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.Engine.Services.Devices.Spectrum" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:properties="clr-namespace:ColorVision.Engine.Properties"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:DeviceSpectrum}"
             d:DesignHeight="450" d:DesignWidth="300" Width="300" Initialized="UserControl_Initialized"   >
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="ToolTip" Value="{ Binding Text,RelativeSource={RelativeSource Self}}"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBox.Small}"/>
    </UserControl.Resources>

    <StackPanel Margin="0,3">
        <DockPanel Margin="0,0,5,0">
            <Grid DockPanel.Dock="Right" >
                <ToggleButton  Style="{StaticResource ButtonMQTTConnect}"  Height="10" Width="10"  HorizontalAlignment="Center" IsChecked="{Binding  DService.IsAlive,Mode=OneWay}" IsEnabled="False" />
                <Image Source="{DynamicResource DrawingImageProperty}" Height="18" Margin="0,0,0,0"/>
                <Button Background="Transparent" BorderThickness="0" Command="{Binding PropertyCommand}" />
            </Grid>
            <Button DockPanel.Dock="Right" Command="{Binding RefreshCommand}" Background="Transparent"  BorderThickness="0" Padding="3">
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="rotateTransform1" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <TextBlock Text="&#xE72C;" FontFamily="Segoe MDL2 Assets" Foreground="{DynamicResource GlobalTextBrush}" FontWeight="Bold"  FontSize="12" ToolTip="刷新">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="rotateTransform1" CenterX="6" CenterY="6"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Button>

            <ToggleButton x:Name="ToggleButton0"  Style="{StaticResource ButtonPageControl1}"  Content="{Binding Config.Name}"  FontSize="15"  IsChecked="{Binding IsDisplayOpen}" />
        </DockPanel>
        <Border x:Name="DisPlayBorder"  Style="{DynamicResource BorderModuleArea}" Visibility="{Binding IsDisplayOpen,Converter={StaticResource bool2VisibilityConverter}}" >
            <StackPanel Margin="5">
                <TextBlock x:Name="TextBlockUnknow" Text="{x:Static properties:Resources.UnknownStatus}"  HorizontalAlignment="Center"/>
                <Button x:Name="TextBlockOffLine" Margin="0,0,0,3" Content="OffLine" Click="Button_Click_Open"/>
                <Button x:Name="ButtonUnauthorized" Margin="0,0,0,3" Content="未授权或者许可证过期" Command="{Binding EditCommand}"/>
                <StackPanel x:Name="StackPanelContent">
                    <DockPanel Margin="0,0,0,2">
                        <Button x:Name="btn_connect" Margin="0,0,0,2" Content="打开" Click="Button_Click_Open"/>
                    </DockPanel>
                    <StackPanel x:Name="StackPanelOpen">
                        <DockPanel Margin="0,0,0,5">
                            <TextBlock  Text="平均次数" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                            <TextBox DockPanel.Dock="Right" Text="{Binding ElementName=SpectrumSliderAveNum,Path=Value}"  Width="50"/>
                            <hc:PreviewSlider x:Name="SpectrumSliderAveNum"  TickFrequency ="1" IsSnapToTickEnabled="True"  SmallChange ="1" LargeChange="1"  Value="1" Maximum="100">
                                <hc:PreviewSlider.PreviewContent>
                                    <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0"/>
                                </hc:PreviewSlider.PreviewContent>
                            </hc:PreviewSlider>
                        </DockPanel>
                        <DockPanel Margin="0,0,0,5">
                            <TextBlock  Text="积分时间" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                            <TextBox DockPanel.Dock="Right" Text="{Binding ElementName=SpectrumSliderIntTime,Path=Value}"  Width="50"/>
                            <hc:PreviewSlider x:Name="SpectrumSliderIntTime"  TickFrequency ="1" IsSnapToTickEnabled="True"   SmallChange ="1" LargeChange="1"  Value="100" Maximum="60000">
                                <hc:PreviewSlider.PreviewContent>
                                    <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0"/>
                                </hc:PreviewSlider.PreviewContent>
                            </hc:PreviewSlider>
                        </DockPanel>
                        <StackPanel Margin="0,0,0,5">
                            <UniformGrid Columns="2">
                                <CheckBox Content="自动积分" x:Name="AutoIntTime"/>
                                <CheckBox Content="ND"  IsChecked="{Binding Config.IsWithND}"/>
                                <CheckBox Content="自动校零"  IsChecked="{Binding Config.IsShutterEnable}" x:Name="AutoShutterDark"/>
                                <CheckBox Content="自适应校零" x:Name="AutoDark"  IsChecked="{Binding Config.IsAutoDark}"/>
                            </UniformGrid>
                        </StackPanel>

                        <StackPanel Margin="0,0,0,5">
                            <UniformGrid Columns="3">
                                <Button x:Name="btn_oneTest" Content="单次测试"  Margin="2" Click="Button_Click_OneTest"/>
                                <Button x:Name="btn_autoTest" Content="自动测试"  Margin="2" Click="Button_Click_AutoTest"/>
                                <Button x:Name="btn_oneInitDark" Content="单次校零"  Margin="2" Click="Button_Click_Init_Dark"/>
                            </UniformGrid>
                            <DockPanel>
                                <Button Content="自适应校零"  Margin="2" Command="{Binding SelfAdaptionInitDarkCommand}"/>
                                <Button Grid.Column="1" Margin="5,0,5,0" HorizontalAlignment="Left" Command="{Binding SelfAdaptionInitDarkSettingCommand}" Padding="2" Height="21" Width="21" >
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="rotateTransform21" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                    <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" RenderTransformOrigin="0.5,0.5" FontSize="14" Foreground="{DynamicResource GlobalTextBrush}">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform x:Name="rotateTransform21"/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Button>

                            </DockPanel>
                        </StackPanel>
                        <GroupBox Header="Shutter" Margin="0,0,0,5" Visibility="{Binding Config.IsShutterEnable,Converter={StaticResource bool2VisibilityConverter}}">
                            <StackPanel Margin="5">
                                <DockPanel  Margin="0,2">
                                    <TextBlock Text="{Binding Config.ShutterCfg.Addr}" MinWidth="40"/>
                                    <TextBlock Text=":"/>
                                    <TextBlock Text="{Binding Config.ShutterCfg.BaudRate}" MinWidth="40"/>
                                    <Button Content="连接" Click="Button_Click_Shutter_Connect" Visibility="Collapsed"/>
                                </DockPanel>                                      
                                <DockPanel  Margin="0,2">
                                    <TextBlock Text="{Binding Config.ShutterCfg.OpenCmd}" MinWidth="40"/>
                                    <Button Content="打开" Click="Button_Click_Shutter_Doopen"/>
                                </DockPanel>
                                <DockPanel  Margin="0,2">
                                    <TextBlock Text="{Binding Config.ShutterCfg.CloseCmd}" MinWidth="40"/>
                                    <Button Content="关闭" Click="Button_Click_Shutter_Doclose"/>
                                </DockPanel>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>

                </StackPanel>

                <DockPanel Margin="0,2,0,0" >
                    <TextBlock Text="{x:Static properties:Resources.OutputView}" VerticalAlignment="Center" MinWidth="40" Margin="0,0,20,0"/>
                    <ComboBox x:Name="ComboxView"  Style="{StaticResource ComboBox.Small}"  SelectedValuePath="Value" DisplayMemberPath="Key"   />
                </DockPanel>
            </StackPanel>
        </Border>
    </StackPanel>

</UserControl>
