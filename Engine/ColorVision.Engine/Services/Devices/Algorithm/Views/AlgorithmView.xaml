<UserControl x:Class="ColorVision.Engine.Services.Devices.Algorithm.Views.AlgorithmView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.Engine.Services.Devices.Algorithm.Views"
             xmlns:se="clr-namespace:ColorVision.Engine.Services"
             xmlns:media="clr-namespace:ColorVision.ImageEditor;assembly=ColorVision.ImageEditor"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:properties="clr-namespace:ColorVision.Engine.Properties"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:ViewAlgorithmConfig}"
             d:DesignHeight="600" d:DesignWidth="1280" Background="{DynamicResource BorderBrush}" Initialized="UserControl_Initialized">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="ToolTip" Value="{ Binding Text,RelativeSource={RelativeSource Self}}"/>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="ListCol1" Width="*"/>
            <ColumnDefinition x:Name="ListCol2" Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid x:Name="Grid1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition x:Name="ListRow1" Height="*"/>
                <RowDefinition x:Name="ListRow2" Height="Auto"/>
            </Grid.RowDefinitions>
            <media:ImageView Grid.Row="0" x:Name="ImageView"></media:ImageView>
            <Grid  Grid.Row="1" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ToolBarTray  Grid.Row="0" IsLocked="True">
                    <ToolBar Padding="3,2">
                        <ToggleButton  Style="{StaticResource ToggleButtonSwitch}" IsChecked="{Binding IsShowListView, Converter={StaticResource Boolean2BooleanReConverter}}"/>
                        <ToggleButton  Style="{StaticResource ToggleButtonSwitch}" IsChecked="{Binding IsShowSideListView, Converter={StaticResource Boolean2BooleanReConverter}}"/>

                        <Button  Content="{x:Static properties:Resources.Exchange}" Click="Exchange_Click" Margin="2,0,0,0"/>

                        <Button Content="{x:Static properties:Resources.Inquire}" Click="Inquire_Click" Margin="2,0,0,0"/>
                        <Button  Content="{x:Static properties:Resources.AdvanceSearch}"  Click="SearchAdvanced_Click" Margin="2,0,0,0"/>

                        <Button x:Name="Button222" Content="{x:Static properties:Resources.SaveDataColumn}" Click="SideSave_Click"/>
                    </ToolBar>
                </ToolBarTray>
                <StackPanel HorizontalAlignment="Right"  Orientation="Horizontal">
                    <Button Click="Button_Click" Padding="2" Height="25" Width="25" Margin="0,1,5,0">
                        <Rectangle Width="16" Height="16" Fill="{StaticResource DISave}" />
                    </Button>
                    <Button  Command="{Binding ClearListCommand}" Padding="2" Height="25" Width="25" Margin="0,1,5,0" >
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" To="0.7" Duration="0:0:0.1" AutoReverse="True" />
                                        <DoubleAnimation  Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" To="0.7" Duration="0:0:0.1" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        <Image  Stretch="Uniform" Source="{DynamicResource DrawingImageDelete}" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                            </Image.RenderTransform>
                        </Image>
                    </Button>
                    <Button Grid.Column="1" Margin="0,1,5,0" HorizontalAlignment="Left" Command="{Binding EditCommand}" Padding="2" Height="25" Width="25" >
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="rotateTransform2" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}">
                            <TextBlock.RenderTransform>
                                <RotateTransform x:Name="rotateTransform2" CenterX="8" CenterY="8"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Button>
                </StackPanel>



                <ListView Grid.Row="1" x:Name="listView1" Height="{Binding Height}" Visibility="{Binding IsShowListView, Converter={StaticResource bool2VisibilityConverter}}"  BorderThickness="0"  Padding="0" ScrollViewer.VerticalScrollBarVisibility="Visible" SelectionChanged="listView1_SelectionChanged"  PreviewKeyDown="listView1_PreviewKeyDown" >
                    <ListView.Resources >
                        <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu_Opened" />
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemBaseStyle.Small}">
                            <Setter Property="ContextMenu"  Value="{Binding ContextMenu}"/>
                            <Setter Property="Opacity" Value="1"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFileExists}" Value="False">
                                    <Setter Property="Opacity" Value="0.7"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View >
                        <GridView >
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="{x:Type GridViewColumnHeader}"  BasedOn="{StaticResource  GridViewColumnHeaderBase}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                    <EventSetter Event="Click" Handler="GridViewColumnSort"/>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn  Header="{x:Static properties:Resources.SerialNumber1}" Width="50">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type  se:ViewResultAlg}">
                                        <TextBlock Text="{Binding Id}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="ResultDesc" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding  ResultDesc}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="{x:Static properties:Resources.BatchNumber}" Width="160">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding  Batch}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="{x:Static properties:Resources.File}" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding   FilePath}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="{x:Static properties:Resources.Template}" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding   POITemplateName}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="img_result" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding  ResultImagFile}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn  Header="{x:Static properties:Resources.CreateTime}" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding  CreateTime}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="{x:Static properties:Resources.Duration}" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding  TotalTime}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="ResultType" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate  DataType="{x:Type se:ViewResultAlg}">
                                        <TextBlock Text="{ Binding  ResultType}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>


                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
            <GridSplitter Grid.Row="1" Panel.ZIndex="999" Background="#1FFFFFFF"  Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Top"  DragCompleted="GridSplitter_DragCompleted"  />
        </Grid>
        <ListView x:Name="listViewSide" Visibility="{Binding IsShowSideListView, Converter={StaticResource bool2VisibilityConverter}}"  Width="250" BorderThickness="0" Padding="0" Grid.Column="1">
            <ListView.Resources >
                <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu1_Opened" />
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemBaseStyle.Small}">
                    <Setter Property="ContextMenu"  Value="{Binding ContextMenu}"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View >
                <GridView>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}"  BasedOn="{StaticResource  GridViewColumnHeaderBase}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                </GridView>
            </ListView.View>
        </ListView>

        <TextBox x:Name="SideTextBox" Visibility="Collapsed" Panel.ZIndex="9" Grid.Column="1" Width="{Binding ActualWidth,ElementName=listViewSide}" TextWrapping="WrapWithOverflow" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" BorderThickness="0"  VerticalAlignment="Stretch" VerticalContentAlignment="Top" IsReadOnly="True" />

        <GridSplitter  Grid.Column="1"  Panel.ZIndex="999" Background="#1FFFFFFF"  Width="2" HorizontalAlignment="Left"   DragCompleted="GridSplitter_DragCompleted1"  />

    </Grid>
</UserControl>
