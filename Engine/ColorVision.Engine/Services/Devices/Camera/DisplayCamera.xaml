<UserControl x:Class="ColorVision.Engine.Services.Devices.Camera.DisplayCamera"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.Engine.Services.Devices.Camera"
             xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:properties="clr-namespace:ColorVision.Engine.Properties"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:DeviceCamera}"
             d:DesignHeight="800" d:DesignWidth="300" Width="300" Initialized="UserControl_Initialized">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="ToolTip" Value="{ Binding Text,RelativeSource={RelativeSource Self}}"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBox.Small}">
            <EventSetter Event="PreviewKeyDown" Handler="TextBox_PreviewKeyDown"/>
        </Style>
    </UserControl.Resources>
    <StackPanel Margin="0,3">
        <DockPanel Margin="0,0,5,0">
            <Grid DockPanel.Dock="Right" >
                <ToggleButton  Style="{StaticResource ButtonMQTTConnect}" Command="{Binding PropertyCommand}" Height="10" Width="10"  HorizontalAlignment="Center" IsChecked="{Binding  DService.IsAlive,Mode=OneWay}" IsEnabled="False" />
                <Image Source="{DynamicResource DrawingImageProperty}" Height="18" Margin="0,0,0,0"/>
                <Button Background="Transparent" BorderThickness="0" Command="{Binding PropertyCommand}"/>
            </Grid>
            
            <Button DockPanel.Dock="Right" Command="{Binding RefreshCommand}" Background="Transparent"  BorderThickness="0" Padding="3">
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="rotateTransform1" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <TextBlock Text="&#xE72C;" FontFamily="Segoe MDL2 Assets" Foreground="{DynamicResource GlobalTextBrush}" FontWeight="Bold"  FontSize="12" ToolTip="刷新">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="rotateTransform1" CenterX="6" CenterY="6"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Button>
            <Button DockPanel.Dock="Right"  Command="{Binding PhyCamera.EditCommand}" Background="Transparent" BorderThickness="0" Padding="2" Height="20" Width="20" >
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="rotateTransform21" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="{DynamicResource GlobalTextBrush}">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="rotateTransform21" CenterX="7" CenterY="7"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Button>
            <Grid  DockPanel.Dock="Right"  ToolTip="查看相机的温度数据">
                <Image Source="{DynamicResource DITemperature}" Stretch="Uniform" Height="18"/>
                <Button   Background="Transparent" BorderThickness="0" Command="{Binding FetchLatestTemperatureCommand}"/>
            </Grid>

            <Grid  DockPanel.Dock="Right" ToolTip="保存当前的曝光等参数">
                <Image Source="{DynamicResource DrawingImageSave}" Stretch="Uniform" Height="18">
                    <Image.RenderTransform>
                        <ScaleTransform x:Name="ScaleTransform"/>
                    </Image.RenderTransform>
                </Image>


                <Button Background="Transparent" BorderThickness="0" Command="{Binding DisPlaySaveCommand}">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" From="1" To="0.8" Duration="0:0:0.1" FillBehavior="Stop"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" From="1" To="0.8" Duration="0:0:0.1" FillBehavior="Stop"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" From="0.8" To="1" BeginTime="0:0:0.1" Duration="0:0:0.1" FillBehavior="Stop"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" From="0.8" To="1" BeginTime="0:0:0.1" Duration="0:0:0.1" FillBehavior="Stop"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </Grid>
            <Grid >
                <ToggleButton  x:Name="ToggleButton0"  Style="{StaticResource ButtonPageControl1}" Content="{Binding Config.Name}"  FontSize="15"  IsChecked="{Binding IsDisplayOpen}" />
                <Grid  Height="18"   HorizontalAlignment="Left" MouseLeftButtonDown="Grid_MouseLeftButtonDown" Visibility="{Binding IsDisplayOpen,Converter={StaticResource bool2VisibilityConverter}}" Background="{DynamicResource GlobalBackground}" Margin="4,0,0,0">
                    <Image Source="{Binding Icon}"/>
                </Grid>
            </Grid>
            
        </DockPanel>
        <Border x:Name="DisPlayBorder" Style="{DynamicResource BorderModuleArea}" Visibility="{Binding IsDisplayOpen,Converter={StaticResource bool2VisibilityConverter}}">
            <StackPanel Margin="3">
                <DockPanel x:Name="TextBlockUnknow" Margin="0,0,0,3" >
                    <Button Content="刷新设备列表" Command="{Binding  RefreshDeviceIdCommand}"  Margin="0,0,3,0" />
                    <TextBlock  Text="{x:Static properties:Resources.UnknownStatus}"  HorizontalAlignment="Center"/>
                </DockPanel>

                <DockPanel x:Name="ButtonUnauthorized" Margin="0,0,0,3" >
                    <Button Content="刷新设备列表" Command="{Binding  RefreshDeviceIdCommand}"  Margin="0,0,3,0" />
                    <Button Content="未授权或者相机许可证过期" Command="{Binding PhyCamera.UploadLicenseCommand}"  />
                </DockPanel>
                <DockPanel x:Name="ButtonInit" Margin="0,0,0,3" >
                    <Button Content="刷新设备列表" Command="{Binding  RefreshDeviceIdCommand}" Margin="0,0,3,0"/>
                    <Button Content="请先配置相机ID" Command="{Binding EditCommand}"/>
                </DockPanel>
                <Button x:Name="ButtonOffline" Margin="0,0,0,3" Visibility="Collapsed" Content="设备离线" Foreground="White" Background="Red" Click="CameraOffline_Click"/>
                <DockPanel x:Name="ButtonOpen"  Margin="0,0,0,3">
                    <Button  DockPanel.Dock="Right" Grid.Column="1" Margin="5,0,0,0" Content="{x:Static properties:Resources.Video}"  Click="Video_Click"/>
                    <Grid>
                        <ProgressBar Grid.Column="1" Name="ProgressBarOpen" Background="Transparent" Value="1" Foreground="Red" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" hc:VisualElement.Text="{Binding ElementName=OpenButton,Path=Content}"  MaxWidth="400" Visibility="Collapsed"/>
                        <Button x:Name="OpenButton"  Grid.Column="0" Content="{x:Static properties:Resources.Open}"  Click="Open_Click" />
                    </Grid>

                </DockPanel>
                <DockPanel x:Name="ButtonClose"  Visibility="Collapsed" >
                    <Grid>
                        <ProgressBar Grid.Column="1" Name="ProgressBarClose" Background="Transparent" Value="1" Foreground="Green" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" hc:VisualElement.Text="{Binding ElementName=CloseButton,Path=Content}"  MaxWidth="400" Visibility="Collapsed"/>
                        <Button x:Name="CloseButton" Margin="0,0,0,3" Grid.Column="0" Content="{x:Static properties:Resources.Close}" Foreground="White" Background="Red"  Click="Close_Click" />
                    </Grid>

                </DockPanel>
                <StackPanel x:Name="StackPanelOpen" Margin="0,0,0,2">
                    <StackPanel Visibility="{Binding DService.IsVideoOpen,Converter={StaticResource bool2VisibilityConverter}}">
                        <DockPanel Margin="0,0,0,3" >
                            <TextBlock  Text="{x:Static properties:Resources.Gain}" VerticalAlignment="Center"   HorizontalAlignment="Center"  Margin="0,0,5,0"  MinWidth="50" />
                            <TextBox DockPanel.Dock="Right" Text="{Binding Config.Gain, StringFormat=F2}" MinWidth="50"/>
                            <hc:PreviewSlider TickFrequency ="1" IsSnapToTickEnabled="True"  SmallChange ="1" LargeChange="10" ValueChanged="PreviewSlider_ValueChanged1"  Value="{Binding Config.Gain}" Minimum="{Binding Config.GainMin}" Maximum="{Binding Config.GainMax}"/>
                        </DockPanel>
                        <DockPanel Margin="0,0,0,3" >
                            <TextBlock  Text="{x:Static properties:Resources.Exposure}" VerticalAlignment="Center"   HorizontalAlignment="Center"  Margin="0,0,5,0" MinWidth="50" />
                            <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTime, StringFormat=F2}" MinWidth="50"/>
                            <hc:PreviewSlider TickFrequency ="0.001" IsSnapToTickEnabled="True"  SmallChange ="0.001" LargeChange="0.01" ValueChanged="PreviewSlider_ValueChanged"  Value="{Binding Config.ExpTimeLog}" Minimum="{Binding Config.ExpTimeMinLog}" Maximum="{Binding Config.ExpTimeMaxLog}"/>
                        </DockPanel>
                    </StackPanel>

                    <StackPanel x:Name="StackPanelImage"  Visibility="{Binding DService.IsVideoOpen,Converter={StaticResource bool2VisibilityConverter1}}">
                        <DockPanel Margin="0,0,0,3" >
                            <TextBlock  Text="{x:Static properties:Resources.Gain}" VerticalAlignment="Center"   HorizontalAlignment="Center"  Margin="0,0,5,0"  MinWidth="50" />
                            <TextBox DockPanel.Dock="Right" Text="{Binding Config.Gain, StringFormat=F2}" MinWidth="50"/>
                            <hc:PreviewSlider TickFrequency ="1" IsSnapToTickEnabled="True"  SmallChange ="1" LargeChange="10" ValueChanged="PreviewSlider_ValueChanged1"  Value="{Binding Config.Gain}" Minimum="{Binding Config.GainMin}" Maximum="{Binding Config.GainMax}"/>
                        </DockPanel>
                        <StackPanel Visibility="{Binding Config.IsAutoExpose,Converter={StaticResource bool2VisibilityConverter1}}"  >
                            <StackPanel Visibility="{Binding Config.IsExpThree,Converter={StaticResource bool2VisibilityConverter1}}">
                                <DockPanel Margin="0,0,0,3">
                                    <TextBlock  Text="{x:Static properties:Resources.Exposure}" VerticalAlignment="Center"   HorizontalAlignment="Center"  Margin="0,0,5,0" MinWidth="50"  />
                                    <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTime, StringFormat=F2}" Width="50"/>
                                    <hc:PreviewSlider TickFrequency ="0.001" IsSnapToTickEnabled="True"  SmallChange ="0.001" LargeChange="0.01" ValueChanged="PreviewSlider_ValueChanged"  Value="{Binding Config.ExpTimeLog}" Minimum="{Binding Config.ExpTimeMinLog}" Maximum="{Binding Config.ExpTimeMaxLog}"/>
                                </DockPanel>
                            </StackPanel>
                            <StackPanel Visibility="{Binding Config.IsExpThree,Converter={StaticResource bool2VisibilityConverter}}">
                                <DockPanel Margin="0,0,0,3">
                                    <TextBlock  Text="{x:Static properties:Resources.ExposureR}" VerticalAlignment="Center"  HorizontalAlignment="Center" Margin="0,0,5,0"  MinWidth="60" />
                                    <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTimeR, StringFormat=F2}" Width="50"/>
                                    <hc:PreviewSlider TickFrequency ="0.001" IsSnapToTickEnabled="True"  SmallChange ="0.001" LargeChange="0.01" ValueChanged="PreviewSlider_ValueChanged"  Value="{Binding Config.ExpTimeRLog}" Minimum="{Binding Config.ExpTimeMinLog}" Maximum="{Binding Config.ExpTimeMaxLog}"/>
                                </DockPanel>
                                <DockPanel Margin="0,0,0,3">
                                    <TextBlock  Text="{x:Static properties:Resources.ExposureG}" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0"  MinWidth="60" />
                                    <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTimeG, StringFormat=F2}" Width="50"/>
                                    <hc:PreviewSlider TickFrequency ="0.001" IsSnapToTickEnabled="True"  SmallChange ="0.001" LargeChange="0.01" ValueChanged="PreviewSlider_ValueChanged"  Value="{Binding Config.ExpTimeGLog}" Minimum="{Binding Config.ExpTimeMinLog}" Maximum="{Binding Config.ExpTimeMaxLog}"/>
                                </DockPanel>
                                <DockPanel Margin="0,0,0,3">
                                    <TextBlock  Text="{x:Static properties:Resources.ExposureB}" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" MinWidth="60" />
                                    <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTimeB, StringFormat=F2}" Width="50"/>
                                    <hc:PreviewSlider TickFrequency ="0.001" IsSnapToTickEnabled="True"  SmallChange ="0.001" LargeChange="0.001" ValueChanged="PreviewSlider_ValueChanged"  Value="{Binding Config.ExpTimeBLog}" Minimum="{Binding Config.ExpTimeMinLog}" Maximum="{Binding Config.ExpTimeMaxLog}"/>
                                </DockPanel>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Margin="0,0,0,3" Orientation="Horizontal">
                            <TextBlock  Text="平均次数" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0"  MinWidth="50" />
                            <TextBox DockPanel.Dock="Right" Text="{Binding Config.AvgCount}" HorizontalAlignment="Left" Width="100"  Margin="0,0,10,0"  />
                            <TextBlock  Text="翻转" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0"  MinWidth="30" />
                            <ComboBox x:Name="CBFilp" SelectedValue="{Binding Config.FlipMode}"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value"  DisplayMemberPath="Key"  Width="70" />
                        </StackPanel>

                        <DockPanel Margin="0,0,0,3">
                            <Grid Width="20" Margin="5,0" DockPanel.Dock="Right" HorizontalAlignment="Left">
                                <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform x:Name="rotateTransform43" CenterX="8" CenterY="8"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0"  Click="EditHDRTemplate">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="rotateTransform43" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                            </Grid>
                            <TextBlock  Text="启用HDR" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0"  MinWidth="50" />
                            <ComboBox x:Name="ComboBoxHDRTemplate" d:DataContext="{d:DesignInstance local:DisplayCameraConfig}" SelectedIndex="{Binding HDRTemplateIndex}" Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value" DisplayMemberPath="Key"/>
                           
                        </DockPanel>

                        <StackPanel Visibility="{Binding Config.IsAutoExpose,Converter={StaticResource bool2VisibilityConverter1}}" Margin="0,0,0,3">
                            <DockPanel >
                                <Button Content="{x:Static properties:Resources.AutoExposure}"  DockPanel.Dock="Right"  Click="AutoExplose_Click"  HorizontalAlignment="Left"/>
                                <CheckBox DockPanel.Dock="Right" Content="ND" Padding="2,0,0,0" IsChecked="{Binding Config.IsAutoExpWithND}" Visibility="{Binding Config.CFW.IsNDPort,Converter={StaticResource bool2VisibilityConverter}}" Margin="0,0,5,0"/>
                                <Grid Width="20" Margin="5,0" DockPanel.Dock="Right" HorizontalAlignment="Left">
                                    <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform x:Name="rotateTransform2" CenterX="8" CenterY="8"/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                    <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0"  Click="EditAutoExpTime">
                                        <Button.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="rotateTransform2" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Button.Triggers>
                                    </Button>
                                </Grid>
                                <ComboBox x:Name="ComboxAutoExpTimeParamTemplate"   d:DataContext="{d:DesignInstance local:DisplayCameraConfig}" SelectedIndex="{Binding ExpTimeParamTemplateIndex}"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value"  DisplayMemberPath="Key" />
                            </DockPanel>
                        </StackPanel>


                        <StackPanel Margin="0,0,0,2" Visibility="{Binding DService.IsVideoOpen,Converter={StaticResource bool2VisibilityConverter1}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition  Width="*"/>
                                    <ColumnDefinition  Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel>
                                    <DockPanel Margin="0,0,0,3">
                                        <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center"  Visibility="{Binding Config.IsAutoExpose,Converter={StaticResource bool2VisibilityConverter1}}">
                                            <CheckBox Content="ND" Padding="2,0,0,0" IsChecked="{Binding Config.IsAutoExpWithND}" Visibility="{Binding Config.CFW.IsNDPort,Converter={StaticResource bool2VisibilityConverter}}" Margin="0,0,5,0"/>
                                        </StackPanel>
                                        <Grid Width="20" Margin="5,0" DockPanel.Dock="Right" HorizontalAlignment="Left">
                                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}">
                                                <TextBlock.RenderTransform>
                                                    <RotateTransform x:Name="rotateTransform3" CenterX="8" CenterY="8"/>
                                                </TextBlock.RenderTransform>
                                            </TextBlock>
                                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0"  Click="EditAutoExpTime1">
                                                <Button.Triggers>
                                                    <EventTrigger RoutedEvent="Button.Click">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="rotateTransform3" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Button.Triggers>
                                            </Button>
                                        </Grid>
                                        <ComboBox x:Name="ComboxAutoExpTimeParamTemplate1"  d:DataContext="{d:DesignInstance local:DisplayCameraConfig}" SelectedIndex="{Binding ExpTimeParamTemplate1Index}" Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value"  DisplayMemberPath="Key" SelectionChanged="ComboxAutoExpTimeParamTemplate1_SelectionChanged" />
                                    </DockPanel>
                                    <DockPanel Margin="0,0">
                                        <Grid Width="20" Margin="5,0" DockPanel.Dock="Right" HorizontalAlignment="Left">
                                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}">
                                                <TextBlock.RenderTransform>
                                                    <RotateTransform x:Name="rotateTransform4" CenterX="8" CenterY="8"/>
                                                </TextBlock.RenderTransform>
                                            </TextBlock>
                                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0"  Click="MenuItem_Template">
                                                <Button.Triggers>
                                                    <EventTrigger RoutedEvent="Button.Click">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="rotateTransform4" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Button.Triggers>
                                            </Button>
                                        </Grid>
                                        <ComboBox x:Name="ComboxCalibrationTemplate" d:DataContext="{d:DesignInstance local:DisplayCameraConfig}" SelectedIndex="{Binding CalibrationTemplateIndex}" Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value" DisplayMemberPath="Key"/>
                                    </DockPanel>
                                </StackPanel>
                                <ProgressBar Grid.Column="1" Name="ProgressBar" Background="Transparent" Value="10" Foreground="Red" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" hc:VisualElement.Text="{Binding ElementName=TakePhotoButton,Path=Content}"  FontSize="15" FontWeight="Bold" Height="42"  MaxWidth="100" Visibility="Collapsed"/>
                                <Button x:Name="TakePhotoButton" Grid.Column="1" Content="{x:Static properties:Resources.Capture}" FontSize="15" FontWeight="Bold" Click="GetData_Click" />
                            </Grid>
                        </StackPanel>
                    </StackPanel>

                    <DockPanel Margin="0,2" Visibility="{Binding Config.CFW.IsNDPort,Converter={StaticResource bool2VisibilityConverter}}">
                        <Button  DockPanel.Dock="Right" Content="调整NDPort"  Click="NDport_Click" />
                        <TextBlock Text="NDPort" />
                        <TextBox Text="{Binding Config.NDPort}"  BorderThickness="0,0,0,1" Margin="5,0"/>
                    </DockPanel>

                    <StackPanel Margin="2" Visibility="{Binding Config.MotorConfig.IsUseMotor,Converter={StaticResource bool2VisibilityConverter}}">
                        <DockPanel >
                            <Button  DockPanel.Dock="Right" Content="自动聚焦" Click="AutoFocus_Click"   />
                            <Grid Width="20" Margin="5,0" DockPanel.Dock="Right" HorizontalAlignment="Left">
                                <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform x:Name="rotateTransform10" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0"  Click="EditAutoFocus">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="rotateTransform10" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                            </Grid>
                            <ComboBox x:Name="ComboxAutoFocus"   d:DataContext="{d:DesignInstance local:DisplayCameraConfig}" SelectedIndex="{Binding AutoFocusTemplateIndex}"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value"  DisplayMemberPath="Key" />
                        </DockPanel>

                        <DockPanel Margin="0,2">
                            <Button  DockPanel.Dock="Right" Content="移动"  Click="Move_Click" />
                            <CheckBox  x:Name="CheckBoxIsAbs" Content="绝对位置" />
                            <TextBox x:Name="TextPos" Text="0"  BorderThickness="0,0,0,1" Margin="5,0"/>
                        </DockPanel>
                        <DockPanel Margin="0,2">
                            <Button  DockPanel.Dock="Right" Content="调整光圈"  Click="Move1_Click" />
                            <TextBlock Text="光圈F"  Width="40"  />
                            <TextBox x:Name="TextDiaphragm" Text="0"  BorderThickness="0,0,0,1" Margin="5,0"/>
                        </DockPanel>


                        <Button  Margin="0,2" Content="返回原点"  Click="GoHome_Click" />
                        <DockPanel>
                            <Button DockPanel.Dock="Right" Content="获取位置"  Click="GetPosition_Click" />
                            <TextBlock Text="当前位置：" Width="60"/>
                            <TextBox IsReadOnly="True" Text="{Binding Config.MotorConfig.Position}" Background="Transparent" BorderThickness="0,0,0,0"  Margin="5,0" Width="60"/>
                            <TextBox IsReadOnly="True" Text="{Binding Config.MotorConfig.VIDPosition}" Background="Transparent" BorderThickness="0,0,0,0"  Margin="5,0"/>
                        </DockPanel>
                    </StackPanel>


                </StackPanel>
                <DockPanel Margin="0,0,0,0" >
                    <TextBlock Text="{x:Static properties:Resources.OutputView}" VerticalAlignment="Center" MinWidth="40" Margin="0,0,20,0"/>
                    <ComboBox x:Name="ComboxView" Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value" DisplayMemberPath="Key"/>
                </DockPanel>
            </StackPanel>
        </Border>
    </StackPanel>

</UserControl>
