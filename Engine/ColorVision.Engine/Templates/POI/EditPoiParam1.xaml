<Window x:Class="ColorVision.Engine.Templates.POI.EditPoiParam1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ColorVision.Engine.Templates.POI"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:converter="clr-namespace:ColorVision.ImageEditor.Draw.Converter;assembly=ColorVision.ImageEditor"
        xmlns:base="clr-namespace:ColorVision.Themes.Controls;assembly=ColorVision.Themes"
        xmlns:draw ="clr-namespace:ColorVision.ImageEditor.Draw;assembly=ColorVision.ImageEditor"
        xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:properties="clr-namespace:ColorVision.Engine.Properties"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml" 
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:kb ="clr-namespace:ColorVision.Engine.Templates.Jsons.KB"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance kb:KBJson}"
        Title="键盘模板编辑"  Height="1080" Width="1920" WindowState="Maximized" Initialized="Window_Initialized">
    <Window.Resources>
        <local:RoundToNearestHalfConverter x:Key="RoundToNearestHalfConverter"/>

        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBox.Small}">
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <EventSetter Event="PreviewKeyDown" Handler="TextBox_PreviewKeyDown"/>
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBaseStyle}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
        </Style>
        <Style x:Key="BorderModuleArea" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="4,1"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="1"  Background="{DynamicResource GlobalBackground}">
            <Border Margin="5,5,5,0" Style="{StaticResource BorderModuleArea}"  CornerRadius="5">
                <StackPanel Margin="3">
                    <DockPanel Margin="0,3">
                        <DockPanel  Margin="5,0">
                            <TextBlock Text="Width" MinWidth="25" Margin="0,0,5,0"/>
                            <TextBox x:Name="TextBoxCADW" Text="{Binding Width}" Width="55" />
                        </DockPanel>
                        <DockPanel  Margin="5,0"  HorizontalAlignment="Left">
                            <TextBlock Text="Height" MinWidth="25" Margin="0,0,5,0"/>
                            <TextBox x:Name="TextBoxCADH"  Text="{Binding Height}" Width="55" />
                        </DockPanel>
                    </DockPanel>
                    <StackPanel  Orientation="Horizontal" Margin="0,2">
                        <Button  Content="默认画布" DockPanel.Dock="Right" Click="CreateImage_Click"  Style="{StaticResource ButtonDefault.Small}" Margin="2,0" />
                        <Button x:Name="button1" Content="图像导入" HorizontalAlignment="Left"   Style="{StaticResource ButtonDefault.Small}"  Click="Button1_Click" Margin="2,0"/>
                        <Button x:Name="button4" Content="导入最新的图像" Click="Service_Click"  Style="{StaticResource ButtonDefault.Small}" Margin="2,0" />
                        <Button x:Name="button5" Content="拍摄" Click="TakePhoto_Click"  Style="{StaticResource ButtonDefault.Small}" Margin="2,0" />

                    </StackPanel>


                    <DockPanel Margin="0,2" >

                        <Button DockPanel.Dock="Right" Margin="2,0" Content="{x:Static properties:Resources.Import}" Click="Button_Service_Click"/>
                        <Button DockPanel.Dock="Right" Margin="2,0"   Content="{x:Static properties:Resources.Refresh}" Click="Button_RefreshImg_Click"/>
                        <ComboBox x:Name="ComboBoxImg"  Margin="2,0"  Style="{StaticResource ComboBox.Small}"/>
                    </DockPanel>
                    <DockPanel Margin="0,2">
                        <TextBlock Text="背景图片"  Margin="2,0,5,0"/>
                        <TextBox Text="{Binding PoiConfig.BackgroundFilePath}" IsReadOnly="True"/>
                    </DockPanel>
                    <StackPanel  Margin="2" Orientation="Horizontal">
                        <Button  ToolTip="保存关注点" Click="Button_Save_Click" HorizontalAlignment="Right" Margin="0,0,5,0">
                            <Image Source="{StaticResource DrawingImageSave}" Height="20" />
                        </Button>
                        <Button x:Name="button3" ToolTip="清空关注点" Click="Button3_Click" HorizontalAlignment="Right">
                            <Image Source="{StaticResource DrawingImageClear}" Height="20"/>
                        </Button>
                        <Button Content="重渲染" Margin="5,0,0,0" ToolTip="一次"  Click="Button_UpdateVisualLayout_Click"  DockPanel.Dock="Right" Visibility="{Binding PoiConfig.IsLayoutUpdated ,Converter={StaticResource bool2VisibilityConverter1}}" />
                        <Button Content="另存为" ToolTip="另存为需要先保存数据，不保存的数据暂时无法创建新的副本" Click="CreateCopy_Click"/>
                    </StackPanel>
                </StackPanel>
            </Border>
            <Border Grid.Row="1"  Style="{StaticResource BorderModuleArea}"  CornerRadius="5" Margin="5,5,5,0">
                <StackPanel Margin="5">
                    <StackPanel Orientation="Horizontal" Margin="0,2">
                        <TextBlock Text="KBLVSacle" Width="60"/>
                        <TextBox  BorderThickness="1" Width="100" Style="{StaticResource TextBox.Small}" Text="{Binding KBLVSacle}"/>
                    </StackPanel>
                    <DockPanel Margin="0,0">
                        <Grid Width="20" Margin="5,0" DockPanel.Dock="Right" HorizontalAlignment="Left">
                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}">
                                <TextBlock.RenderTransform>
                                    <RotateTransform x:Name="rotateTransform4" CenterX="8" CenterY="8"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Command="{Binding PoiConfig.EditCalibrationTemplateCommand}">
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="rotateTransform4" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>
                            </Button>
                        </Grid>
                        <TextBlock Text="{x:Static properties:Resources.Calibration}"  Margin="0,0,5,0"/>
                        <ComboBox x:Name="ComboxCalibrationTemplate" ItemsSource="{Binding PoiConfig.CalibrationParams}" SelectedIndex="{Binding PoiConfig.CalibrationTemplateIndex}" Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value" DisplayMemberPath="Key"/>
                    </DockPanel>
                    <DockPanel Margin="0,2">
                        <Button DockPanel.Dock="Right"  Content="..." Command="{Binding PoiConfig.SelcetSaveFilePathCommand}" Margin="2,0" />
                        <TextBlock Text="SavePath" Width="60"/>
                        <TextBox  BorderThickness="1" Style="{StaticResource TextBox.Small}" Text="{Binding PoiConfig.SaveFolderPath}"/>
                    </DockPanel>
                    <UniformGrid Columns="3" Margin="0,2">
                        <CheckBox Content="执行Halo" IsChecked="{Binding PoiConfig.DefaultDoHalo}" />
                        <CheckBox Content="执行Key" IsChecked="{Binding PoiConfig.DefaultDoKey}" />
                        <CheckBox Content="中间变量" IsChecked="{Binding PoiConfig.SaveProcessData}"/>
                    </UniformGrid>
                    <StackPanel Orientation="Horizontal" Margin="0,2">
                        <TextBlock Text="Exp" Width="60"/>
                        <TextBox  BorderThickness="1" Width="100" Style="{StaticResource TextBox.Small}" Text="{Binding PoiConfig.Exp}"/>
                    </StackPanel>
                    <Button Content="计算"  Margin="0,2,0,2" Click="Cal_Click"/>
                    
                </StackPanel>
            </Border>
            
            <Border Grid.Row="1"  Style="{StaticResource BorderModuleArea}"  CornerRadius="5" Margin="5,5,5,0">
                <StackPanel Margin="5">
                    <CheckBox Content="{x:Static properties:Resources.Lock}" IsChecked="{Binding PoiConfig.LockDeafult}"/>
                    <StackPanel Margin="2"  Orientation="Horizontal" >
                        <TextBlock Text="默认半径:" Width="55"/>
                        <TextBox Text="{Binding PoiConfig.DefalutRadius}"  Width="55"  />
                    </StackPanel>
                    <StackPanel Margin="2"  Orientation="Horizontal" >
                        <TextBlock Text="默认宽度:" Width="55"/>
                        <TextBox Text="{Binding PoiConfig.DefalutWidth}"  Width="55"  />
                        <TextBlock Text="默认高度:" Width="55" Margin="5,0,0,0"/>
                        <TextBox Text="{Binding PoiConfig.DefalutHeight}"  Width="55"  />
                    </StackPanel>
                </StackPanel>
            </Border>


            <ScrollViewer x:Name="ScrollViewer1" Grid.Row="4" Margin="5,5,5,0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <StackPanel x:Name="FunctionStackpanel" Margin="0" Grid.Row="0">

                    <Border Margin="0" Style="{StaticResource BorderModuleArea}"  CornerRadius="5">
                        <StackPanel  Margin="5">
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                <RadioButton x:Name="RadioButtonAreaCircle" GroupName="shapeArea"  Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaCircle}" Width="60" Content="圆"/>
                                <RadioButton x:Name="RadioButtonAreaRect"  GroupName="shapeArea"  Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaRect}" Width="60" Content="矩形"/>
                                <RadioButton x:Name="RadioButtonAreaMask"  GroupName="shapeArea"   Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaMask}" Width="70" Content="四边形"/>
                                <RadioButton x:Name="RadioButtonAreaPolygon"  GroupName="shapeArea"  Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaPolygon}" Width="60" Content="折线"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,5" >
                                <ToggleButton  HorizontalAlignment="Left"  Height="16" Style="{StaticResource ToggleButtonSwitch}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="3" Click="SetDefault_Click" IsChecked="{Binding PoiConfig.IsUserDraw}"/>
                                <TextBlock  HorizontalAlignment="Left" Text="使用绘图添加布点区域"/>
                                <ToggleButton HorizontalAlignment="Left" Height="16" Margin="10,0,2,0"  Style="{StaticResource ToggleButtonSwitch}"  BorderBrush="{DynamicResource BorderBrush}" BorderThickness="3" Click="ShowPoiConfig_Click" IsChecked="{Binding PoiConfig.IsShowPoiConfig}"/>
                                <TextBlock   HorizontalAlignment="Left"  Text="布点区域显示"/>
                            </StackPanel>
                            <StackPanel>
                                <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaCircle,Converter={StaticResource bool2VisibilityConverter}}">
                                    <DockPanel  Margin="2" HorizontalAlignment="Left">
                                        <TextBlock Text="中心点"  MinWidth="50"/>
                                        <TextBox  Text="{Binding PoiConfig.CenterX}" Width="55"  />
                                        <TextBox  Text="{Binding PoiConfig.CenterY}" Width="55" Margin="5,0"  />
                                    </DockPanel>
                                    <DockPanel  Margin="2" HorizontalAlignment="Left">
                                        <TextBlock Text="半径:" MinWidth="50"/>
                                        <TextBox  x:Name="TextBoxAreaCircleR" Width="55" Text="{Binding PoiConfig.AreaCircleRadius}"  BorderThickness="0,0,0,1"  PreviewTextInput="TextBox_PreviewTextInput"/>
                                    </DockPanel>
                                    <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                    <UniformGrid Columns="2">
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="数量:" MinWidth="50"/>
                                            <TextBox x:Name="tbNum" Width="55" Text="{Binding PoiConfig.AreaCircleNum}"  />
                                        </DockPanel>
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="角度:"  MinWidth="50"/>
                                            <TextBox x:Name="tbAngle" Width="55" Text="{Binding PoiConfig.AreaCircleAngle}" />
                                        </DockPanel>
                                    </UniformGrid>

                                </StackPanel>
                                <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaRect,Converter={StaticResource bool2VisibilityConverter}}">
                                    <DockPanel Margin="0,2" >
                                        <Button Content="寻找发光区" Margin="5,0,0,0" ToolTip="一次"  Click="FindLuminousArea_Click"   />
                                        <Button Grid.Column="1" Margin="5,1,5,0" HorizontalAlignment="Left" Command="{Binding PoiConfig.FindLuminousAreaEditCommand}" Padding="2" Height="25" Width="25" >
                                            <Button.Triggers>
                                                <EventTrigger RoutedEvent="Button.Click">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="rotateTransform21" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:0.5" FillBehavior="Stop"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Button.Triggers>
                                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" RenderTransformOrigin="0.5,0.5" FontSize="16" Foreground="{DynamicResource GlobalTextBrush}">
                                                <TextBlock.RenderTransform>
                                                    <RotateTransform x:Name="rotateTransform21"/>
                                                </TextBlock.RenderTransform>
                                            </TextBlock>
                                        </Button>
                                    
                                    </DockPanel>
                                    <DockPanel  Margin="2" HorizontalAlignment="Left">
                                        <TextBlock Text="中心点"  MinWidth="50"/>
                                        <TextBox  Text="{Binding PoiConfig.CenterX}" Width="55"  />
                                        <TextBox  Text="{Binding PoiConfig.CenterY}" Width="55" Margin="5,0"  />
                                    </DockPanel>
                                    <UniformGrid  Columns="2">
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="宽度:" MinWidth="50"/>
                                            <TextBox x:Name="tbWidth"  Width="55" Text="{Binding PoiConfig.AreaRectWidth}"  />
                                        </DockPanel>
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="高度:" MinWidth="50"/>
                                            <TextBox x:Name="tbHeight" Width="55"  Text="{Binding PoiConfig.AreaRectHeight}" />
                                        </DockPanel>
                                    </UniformGrid>
 

                                    <Grid >
                                        <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                        <StackPanel  HorizontalAlignment="Right">
                                            <Button x:Name="ButtonImportMarin1" Content="边距计算" Margin="3" Height="25" Click="ButtonImportMarin1_Click"/>
                                            <Popup  x:Name="ImportMarinPopup1" AllowsTransparency="true" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false" PlacementTarget="{Binding ElementName=ButtonImportMarin1}">
                                                <Border  Style="{StaticResource BorderModuleArea}" Background="{DynamicResource SecondaryRegionBrush}" Width="150" CornerRadius="5">
                                                    <StackPanel Margin="5">
                                                        <UniformGrid Columns="2" >
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock VerticalAlignment="Center"  Text="上:" Width="20"/>
                                                                <TextBox  x:Name="TextBoxUp2" Text="10" Margin="5,0" MinWidth="55" PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock  VerticalAlignment="Center"  Text="左:" Width="20"/>
                                                                <TextBox   x:Name="TextBoxLeft2" Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock  VerticalAlignment="Center"  Text="下:" Width="20"/>
                                                                <TextBox  x:Name="TextBoxDown2"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock VerticalAlignment="Center"  Text="右:" Width="20"/>
                                                                <TextBox  x:Name="TextBoxRight2"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                        </UniformGrid>
                                                        <StackPanel Orientation="Horizontal">
                                                            <ComboBox x:Name="ComboBoxBorderType11" HorizontalAlignment="Left"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Key"  DisplayMemberPath="Value" Margin="0,0,6,0"/>
                                                            <Button Content="设置" Click="ButtonImportMarinSetting2"/>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </Border>
                                            </Popup>
                                        </StackPanel>
                                    </Grid>
                                    <UniformGrid  Columns="2" >
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="行数:"  MinWidth="50"/>
                                            <TextBox x:Name="tbX"  Width="55" Text="{Binding PoiConfig.AreaRectRow}"  />
                                        </DockPanel>
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="列数:" MinWidth="50"/>
                                            <TextBox x:Name="tbY" Width="55" Text="{Binding PoiConfig.AreaRectCol}" />
                                        </DockPanel>
                                    </UniformGrid>
                                </StackPanel>
                                <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaMask,Converter={StaticResource bool2VisibilityConverter}}">
                                    <Grid>
                                        <StackPanel>
                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                <TextBlock Text="X1"   MinWidth="20"/>
                                                <TextBox Text="{Binding PoiConfig.Polygon1X}" Width="55" Margin="5,0" />
                                                <TextBox   Text="{Binding PoiConfig.Polygon1Y}" Width="55" Margin="5,0"   />
                                            </DockPanel>
                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                <TextBlock Text="X2"  MinWidth="20"/>
                                                <TextBox  Text="{Binding PoiConfig.Polygon2X}" Width="55" Margin="5,0"  />
                                                <TextBox   Text="{Binding PoiConfig.Polygon2Y}" Width="55" Margin="5,0"  />
                                            </DockPanel>
                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                <TextBlock  Text="X3"  MinWidth="20" />
                                                <TextBox  Text="{Binding PoiConfig.Polygon3X}" Width="55" Margin="5,0"  />
                                                <TextBox   Text="{Binding PoiConfig.Polygon3Y}" Width="55" Margin="5,0"  />
                                            </DockPanel>
                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                <TextBlock Text="X4"   MinWidth="20"/>
                                                <TextBox  Text="{Binding PoiConfig.Polygon4X}" Width="55" Margin="5,0"  />
                                                <TextBox   Text="{Binding PoiConfig.Polygon4Y}" Width="55" Margin="5,0"  />
                                            </DockPanel>
                                        </StackPanel>
                                        <StackPanel  HorizontalAlignment="Right">
                                            <Button x:Name="ButtonImportMarin" Content="边距计算" Margin="3" Height="25" Click="ButtonImportMarin_Click"/>
                                            <Popup  x:Name="ImportMarinPopup" AllowsTransparency="true" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false" PlacementTarget="{Binding ElementName=ButtonImportMarin}">
                                                <Border  Style="{StaticResource BorderModuleArea}" Background="{DynamicResource SecondaryRegionBrush}" Width="150" CornerRadius="5">
                                                    <StackPanel Margin="5">
                                                        <UniformGrid Columns="2" >
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock VerticalAlignment="Center"  Text="上:" Width="20"/>
                                                                <TextBox  x:Name="TextBoxUp1" Text="10" Margin="5,0" MinWidth="55" PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock  VerticalAlignment="Center"  Text="左:" Width="20"/>
                                                                <TextBox   x:Name="TextBoxLeft1" Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock  VerticalAlignment="Center"  Text="下:" Width="20"/>
                                                                <TextBox  x:Name="TextBoxDown1"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                            <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                <TextBlock VerticalAlignment="Center"  Text="右:" Width="20"/>
                                                                <TextBox  x:Name="TextBoxRight1"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                            </DockPanel>
                                                        </UniformGrid>
                                                        <StackPanel Orientation="Horizontal">
                                                            <ComboBox x:Name="ComboBoxBorderType1" HorizontalAlignment="Left"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Key"  DisplayMemberPath="Value" Margin="0,0,6,0"/>
                                                            <Button Content="设置" Click="ButtonImportMarinSetting"/>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </Border>
                                            </Popup>
                                        </StackPanel>

                                    </Grid>
                                    <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                    <UniformGrid  Columns="2" >
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="行数:"   MinWidth="50"/>
                                            <TextBox  Text="{Binding PoiConfig.AreaPolygonRow}" Width="55"  />
                                        </DockPanel>
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="列数:"  MinWidth="50"/>
                                            <TextBox  Text="{Binding PoiConfig.AreaPolygonCol}" Width="55" />
                                        </DockPanel>
                                    </UniformGrid>
                                </StackPanel>
                                <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaPolygon,Converter={StaticResource bool2VisibilityConverter}}">
                                    <ListView  x:Name="ListViewPolygon"  MaxHeight="200" Style="{StaticResource ListView.Small}" ItemsSource="{Binding PoiConfig.Polygons}" Grid.Column="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" PreviewKeyDown="ListView1_PreviewKeyDown" ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback" >
                                        <ListView.Resources>
                                            <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu_Opened" >
                                            </ContextMenu>
                                        </ListView.Resources>
                                        <ListView.View >
                                            <GridView >
                                                <GridView.ColumnHeaderContainerStyle>
                                                    <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource  InputElementBaseStyle}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                                        <EventSetter Event="Click" Handler="GridViewColumnSort"/>
                                                    </Style>
                                                </GridView.ColumnHeaderContainerStyle>
                                                <GridViewColumn Header="显示">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate DataType="{x:Type local:PolygonPoint}">
                                                            <TextBlock Text="{Binding .}"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="显示">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate DataType="{x:Type local:PolygonPoint}">
                                                            <Button Content="删除" Click="Button_Click" Tag="{Binding .}"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="显示" Width="70">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate DataType="{x:Type local:PolygonPoint}">
                                                            <TextBox Text="{Binding SplitNumber}" HorizontalContentAlignment="Center" Width="50"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>


                                            </GridView>
                                        </ListView.View>
                                    </ListView>



                                    <UniformGrid  Columns="2" >
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <TextBlock Text="设定分割"   MinWidth="70"/>
                                            <TextBox Text="{Binding PoiConfig.AreaPolygonLenNum}" Width="55"/>
                                        </DockPanel>
                                        <DockPanel Margin="2" HorizontalAlignment="Left">
                                            <ToggleButton  HorizontalAlignment="Left"  Height="16" Margin="2" Style="{StaticResource ToggleButtonSwitch}"  Click="SetDefault_Click" IsChecked="{Binding PoiConfig.AreaPolygonUsNode}"/>
                                            <TextBox  Text="是否使用节点" />
                                        </DockPanel>
                                    </UniformGrid>
                                    <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                <RadioButton x:Name="RadioButtonCircle" Width="60"  GroupName="shape" IsChecked="{Binding PoiConfig.IsPointCircle}" Content="圆形"/>
                                <RadioButton x:Name="RadioButtonRect" Width="60"  GroupName="shape" IsChecked="{Binding PoiConfig.IsPointRect}" Content="矩形"/>
                            </StackPanel>

                            <StackPanel Margin="5" Visibility="{Binding PoiConfig.IsPointCircle,Converter={StaticResource bool2VisibilityConverter}}" >
                                <DockPanel Margin="2"  HorizontalAlignment="Left">
                                    <TextBlock Text="半径:" Width="40"/>
                                    <TextBox  Text="{Binding PoiConfig.DefaultCircleRadius}" Width="55" />
                                </DockPanel>
                            </StackPanel>
                            <StackPanel Margin="5" Visibility="{Binding PoiConfig.IsPointRect,Converter={StaticResource bool2VisibilityConverter}}"  Orientation="Horizontal">
                                <DockPanel Margin="2" >
                                    <TextBlock Text="宽度:" Width="40"/>
                                    <TextBox Text="{Binding PoiConfig.DefaultRectWidth}"  Width="55"  />
                                </DockPanel>
                                <DockPanel Margin="2" >
                                    <TextBlock Text="高度:" Width="40"/>
                                    <TextBox Text="{Binding PoiConfig.DefaultRectHeight}"  Width="55"  />
                                </DockPanel>
                            </StackPanel>
                            <ComboBox x:Name="ComboBoxBorderType2"  Visibility="{Binding ElementName=RadioButtonAreaMask,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter1}}" HorizontalAlignment="Left" Width="100" Style="{StaticResource ComboBox.Small}" SelectedValuePath="Key"  DisplayMemberPath="Value" Margin="5,3"/>
                            <Button x:Name="button2" Margin="5"  Height="30" Width="100" FontWeight="Bold" HorizontalAlignment="Left"  Content="绘制" Click="Button2_Click"/>
                        </StackPanel>

                    </Border>
                </StackPanel>
            </ScrollViewer>
        </StackPanel>

        <Grid x:Name="ImageContentGrid" Grid.Column="0"  Background="{StaticResource  TransparentGridBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition x:Name="FocusPointRowDefinition" Height="auto"/>
            </Grid.RowDefinitions>
            <draw:ZoomboxSub x:Name="Zoombox1"  MaxZoom="10"  MinZoom="0.01">
                <draw:DrawCanvas x:Name="ImageShow" Initialized="ImageShow_Initialized" MouseLeave="ImageShow_MouseLeave"  MouseEnter="ImageShow_MouseEnter"  PreviewMouseLeftButtonDown="ImageShow_PreviewMouseLeftButtonDown"  PreviewMouseRightButtonDown ="ImageShow_PreviewMouseRightButtonDown"  PreviewMouseUp="ImageShow_MouseUp"  MouseWheel="ImageShow_MouseWheel" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.ClearTypeHint="Enabled" MouseMove="ImageShow_MouseMove"/>
            </draw:ZoomboxSub>
            <ToolBarTray x:Name="ToolBarRight"  HorizontalAlignment="Left" DataContext="{Binding ToolBarTop}" Orientation="Vertical" Margin="2,50,0,0" Grid.Row="0" Grid.RowSpan="2"  VerticalAlignment="Top">
                <ToolBar ToolBarTray.IsLocked="True" Padding="2,3" >
                    <Button Command="{Binding SaveImageCommand}" Margin="0,0,0,2">
                        <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageSave}"  Margin="-5"/>
                    </Button>
                    <Button Command="{Binding ClearImageCommand}" Margin="0,0,0,2">
                        <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageClear}"  Margin="-5"/>
                    </Button>
                </ToolBar>
            </ToolBarTray>
            <GridSplitter Grid.Row="1" Panel.ZIndex="999" Background="#1FFFFFFF"  Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Top"  DragCompleted="GridSplitter_DragCompleted"  />
            <ToolBar x:Name="ToolBar1" Grid.Row="0"  d:DataContext="{d:DesignInstance draw:ImageViewModel}" Margin="0,2,4,0"  Background="#AAFFFFFF" ToolBarTray.IsLocked="True" HorizontalAlignment="Center" VerticalAlignment="Top">
                <ToolBar.Resources>
                    <ResourceDictionary Source="/ColorVision.Themes;component/Themes/Icons.xaml"/>
                </ToolBar.Resources>
                <ToggleButton x:Name="ToggleButtonMouse"  IsChecked="{Binding ShowImageInfo}" >
                    <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageMouse}"  Margin="-5"/>
                </ToggleButton>
                <ToggleButton x:Name="ToggleButtonDrag" IsChecked="{Binding ImageEditMode}"  Margin="1,0" ToolTip="可以按下Ctrl缩放和移动图像">
                    <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagedrag}"/>
                </ToggleButton>
                <Button Command="{Binding ZoomUniformCommand}"  Margin="1,0">
                    <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImage1_1}"/>
                </Button>
                <Button Command="{Binding ZoomInCommand}"  Margin="1,0">
                    <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_in}" />
                </Button>
                <Button  Command="{Binding ZoomOutCommand}"  Margin="1,0">
                    <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_out}"/>
                </Button>
                <Button Command="{Binding ZoomNoneCommand}"  Margin="1,0">
                    <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageexpend}"/>
                </Button>
                <ToggleButton Command="{Binding FullCommand}" Margin="1,0" >
                    <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageMax}"/>
                </ToggleButton>
                <TextBox   BorderThickness="1"  HorizontalContentAlignment="Center"  Text="{Binding ElementName=Zoombox1,Path=ContentMatrix.M11,StringFormat={}{0:P1}}" />
                <ToggleButton IsChecked="{Binding Gridline.IsShow}" >
                    <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DIGridlines}"  Margin="-5"/>
                </ToggleButton>
                
                <ToggleButton  IsChecked="{Binding EraseVisual}" Margin="1,0" >
                    <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageeraser}"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding DrawCircle}" Margin="1,0">
                    <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageCircle}"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding DrawRect}" Margin="1,0">
                    <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageRect}"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding DrawPolygon}" Margin="1,0">
                    <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagePolygon}"/>
                </ToggleButton>
                <Button x:Name="reference"  Click="reference_Click" Margin="1,0">
                    <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource ConcentricCirclesDrawImg}"  Margin="-5"/>
                </Button>
                <Popup x:Name="menuPop1" StaysOpen="False" Margin="0" PlacementTarget="{Binding ElementName=reference}"  AllowsTransparency="True">
                    <StackPanel Margin="0">
                        <Button Content="无" Command="{Binding ToolConcentricCircle.SelectNoneCommand}" Click="reference1_Click" Width="80" Tag="-1"/>
                        <Button Content="十字准线" Command="{Binding ToolConcentricCircle.Select2Command}" Click="reference1_Click" Width="80" Tag="2"/>
                        <Button Content="同心圆" Command="{Binding ToolConcentricCircle.Select0Command}" Click="reference1_Click" Width="80" Tag="0"/>
                        <Button Content="单十字准线" Command="{Binding ToolConcentricCircle.Select1Command}" Click="reference1_Click" Width="80"  Tag="1"/>
                    </StackPanel>
                </Popup>
                <ToggleButton  IsChecked="{Binding Measure}" Padding="5" Margin="0,0,2,0">
                    <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageruler}" />
                </ToggleButton>
            </ToolBar>

            <ToolBarTray x:Name="ToolBarLeft"   d:DataContext="{Binding Config}" Orientation="Vertical" Margin="2,50,2,0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top">
                <ToolBar ToolBarTray.IsLocked="True" Padding="2,3" >
                    <StackPanel >
                        <ToggleButton x:Name="Pseudo"  Click="ToggleButton_Click"  Margin="0,0,0,2" >
                            <Image  Style="{StaticResource ToolBarImage}"   Source="/ColorVision.ImageEditor;component/Assets/png/PowerToy.png" Margin="-5"/>
                        </ToggleButton>
                        <Grid  Height="200"  Visibility="{Binding ElementName=Pseudo,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Row="0" Width="28" Text="{Binding ValueEnd, ElementName=PseudoSlider, StringFormat=#0}" Style="{StaticResource BaseStyle}"  Background="Transparent"  BorderThickness="0"  HorizontalContentAlignment="Center" />
                            <TextBox Grid.Row="2" Width="28" Text="{Binding ValueStart, ElementName=PseudoSlider, StringFormat=#0}" Style="{StaticResource BaseStyle}" Background="Transparent"  BorderThickness="0" HorizontalContentAlignment="Center"/>
                            <Grid Grid.Row="1"   Width="18">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"  x:Name="RowDefinitionStart"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="0"  x:Name="RowDefinitionEnd"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Background="White" CornerRadius="10,10,0,0"/>
                                <Border Grid.Row="1"  Background="Transparent">
                                    <Image x:Name="ColormapTypesImage" Source="/ColorVision.Engine;component/Assets/Image/pictureBox1.Image.png" Stretch="Fill" VerticalAlignment="Top"/>
                                </Border>
                                <Border Grid.Row="2" Background="Black" CornerRadius="0,0,10,10 "/>
                            </Grid>
                            <hc:RangeSlider Grid.Row="1"  x:Name="PseudoSlider" FocusVisualStyle="{x:Null}" ValueChanged="PseudoSlider_ValueChanged"  Style="{StaticResource RangeSliderBaseStyle}" Background="Transparent" hc:TipElement.Visibility="Visible" hc:TipElement.Placement="Left" hc:TipElement.StringFormat="#0" ValueEnd="255"  Maximum="255" ValueStart="0"  Minimum="0" Orientation="Vertical" HorizontalAlignment="Center" />
                        </Grid>
                    </StackPanel>
                </ToolBar>
            </ToolBarTray>

            <Grid x:Name="FocusPointGrid" Visibility="Visible" Grid.Row="1" Height="300" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <WindowsFormsHost Grid.Column="0" Width="400" Height="300" x:Name="PropertyGrid21"  Visibility="Collapsed">
                    <winf:PropertyGrid  x:Name="PropertyGrid2" />
                </WindowsFormsHost>
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ListView  x:Name="ListView1"  Style="{StaticResource ListView.Small}" ScrollViewer.HorizontalScrollBarVisibility="Visible" PreviewKeyDown="ListView1_PreviewKeyDown" ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback"  SelectionChanged="ListView1_SelectionChanged" >
                        <ListView.Resources>
                            <ContextMenu x:Key="ContextMenuItem">
                                <MenuItem Header="{x:Static properties:Resources.Delete}"  Click="MenuItem_DrawingVisual_Delete" Tag="{Binding .}"  />
                            </ContextMenu>
                            <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu_Opened" />

                            <DataTemplate x:Key="DrawingVisualCircleTemplate" DataType="{x:Type draw:DVCircle}" >
                                <StackPanel  Orientation="Horizontal">
                                    <TextBox Text="{Binding Attribute.Center,StringFormat={}{0:F0}}" Margin="5,0"/>
                                    <TextBox Text="{Binding Attribute.Radius,StringFormat={}{0:F1}}" Margin="5,0"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate x:Key="DrawingVisualCircleWordTemplate" DataType="{x:Type draw:DVCircleText}" >
                                <StackPanel  Orientation="Horizontal">
                                    <TextBox Text="{Binding Attribute.Text}"  HorizontalContentAlignment="Center" Width="100"  Margin="5,0"/>
                                    <TextBox Text="{Binding Attribute.Center,StringFormat={}{0:F0}}" Width="100"  Margin="5,0"/>
                                    <TextBox Text="{Binding Attribute.Radius,StringFormat={}{0:F1},Converter={StaticResource RoundToNearestHalfConverter}}" Width="60"  Margin="5,0"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate x:Key="DrawingVisualRectangleTemplate"  DataType="{x:Type draw:DVRectangle}">
                                <StackPanel  Orientation="Horizontal">
                                    <TextBox Text="{Binding Attribute.Rect,StringFormat={}{0:F0}}" Width="170"  Margin="5,0"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate x:Key="DrawingVisualRectangleWordTemplate"  DataType="{x:Type draw:DVRectangleText}">
                                <StackPanel  Orientation="Horizontal">
                                    <StackPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{x:Static properties:Resources.Delete}" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                        </ContextMenu>
                                    </StackPanel.ContextMenu>
                                    <TextBox Text="{Binding Attribute.Text}" Width="100"  Margin="5,0"/>
                                    <TextBox Text="{Binding Attribute.Rect,StringFormat={}{0:F0}}" Width="200" Margin="5,0"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type local:KBPoiVMParam}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Width="80" Text="{Binding HaloOutMOVE}" Margin="0,0,5,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                    <TextBox Width="80" Text="{Binding HaloThreadV}" Margin="0,0,5,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                    <TextBox Width="50" Text="{Binding HaloScale}" Margin="0,0,10,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                    <TextBox Width="70" Text="{Binding KeyOutMOVE}" Margin="0,0,5,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                    <TextBox Width="70" Text="{Binding KeyThreadV}" Margin="0,0,5,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                    <TextBox Width="50" Text="{Binding KeyScale}" Margin="0,0,10,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                    <TextBox Width="50" Text="{Binding Area}" Margin="0,0,10,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                    <TextBox Width="50" Text="{Binding Brightness}" Margin="0,0,10,0" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.Resources>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemBaseStyle.Small}">
                                <Setter Property="ContextMenu" Value="{StaticResource ContextMenuItem}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridView.ColumnHeaderContainerStyle>
                                    <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource  GridViewColumnHeaderBase}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                        <EventSetter Event="Click" Handler="GridViewColumnSort"/>
                                    </Style>
                                </GridView.ColumnHeaderContainerStyle>
                                <GridViewColumn Header="显示">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type draw:IDrawingVisualDatum}">
                                            <CheckBox IsChecked="{Binding BaseAttribute.IsShow}" Tag="{Binding .}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn  Header="   点的描述                         坐标"  Width="400">
                                    <GridViewColumn.CellTemplateSelector>
                                        <converter:DrawCanvasTemplateSelector  DrawingVisualRectangleTemplate ="{StaticResource DrawingVisualRectangleTemplate}" DrawingVisualCircleWordTemplate="{StaticResource DrawingVisualCircleWordTemplate}"  DrawingVisualRectangleWordTemplate="{StaticResource DrawingVisualRectangleWordTemplate}" DrawingVisualCircleTemplate ="{StaticResource DrawingVisualCircleTemplate}" />
                                    </GridViewColumn.CellTemplateSelector>
                                </GridViewColumn>
                                <GridViewColumn  Header="HaloOutMOVE  HaloThreadV HaloScale KeyOutMOVE KeyThreadV KeyScale  面积(mm^2)  辉度" Width="650">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type draw:IDrawingVisual}">
                                            <ContentPresenter Content="{Binding BaseAttribute.Param}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Grid Grid.Column="1">
                        <StackPanel>
                            <Button Content="编辑" Click="Button_Click_1"/>
                        </StackPanel>
                        
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <Grid x:Name="WaitControl" Grid.Row="0" Grid.ColumnSpan="2" Panel.ZIndex="9" Visibility="Collapsed">
            <Grid   Background="Black"  Opacity="0.3"/>
            <Border   Background="#F9F9F9"  Height="250" Width="250"  CornerRadius="10">
                <Border Background="#F3F3F3" BorderBrush="#EAEAEA" BorderThickness="1" CornerRadius="5" Margin="5">
                    <Grid>
                        <base:ProgressRing  BorderBrush="Red" Margin="30" />
                        <TextBlock x:Name="WaitControlText" Text="数据生成中" HorizontalAlignment="Center" FontSize="16"/>
                        <ProgressBar x:Name="WaitControlProgressBar" Visibility="Collapsed" BorderThickness="0"  Maximum="100" Minimum="0"  Margin="5" VerticalAlignment="Bottom" />
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </Grid>
</Window>
