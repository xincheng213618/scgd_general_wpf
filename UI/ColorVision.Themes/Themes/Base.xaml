<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter ="clr-namespace:ColorVision.Themes.Converter"
                    x:Class="ColorVision.Themes.BaseEvent"
                    >

    <SolidColorBrush x:Key="DarkDefaultBrush"  Color="#55326CF3" />
    <converter:MemorySizeConverter x:Key="MemorySizeConverter"/>
    <converter:WidthToBooleanConverter x:Key="WidthToBooleanConverter"/>
    <converter:DescriptioConverter x:Key="DescriptioConverter"/>

    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
    <converter:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
    <converter:BooleanToVisibilityReConverter x:Key="bool2VisibilityConverter1"/>
    
    <Style TargetType="{x:Type AccessText}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseBaseStyle}">
        <EventSetter Event="PreviewKeyDown" Handler="TextBox_PreviewKeyDown"/>
    </Style>
    <Style x:Key="ButtonCommand" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Margin" Value="10"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
   

    <Style x:Key="TextBlock1" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="ToolTip" Value="{ Binding Text,RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxBaseStyle}">
      
        
    </Style>

    <Style x:Key="GridViewColumnHeaderBase" TargetType="{x:Type GridViewColumnHeader}">
        <Style.Triggers>
            <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Width="{TemplateBinding ActualWidth}"  Height="{TemplateBinding ActualHeight}" Fill="#FF000000" Opacity="0.5" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"  Background="{TemplateBinding Background}"   BorderBrush="{TemplateBinding Border.BorderBrush}"  BorderThickness="0,0,0,0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border  Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"   BorderThickness="0,0,0,0"  CornerRadius="{DynamicResource ControlCornerRadius}">
                            <Border Margin="6,0,0,0" Padding="{TemplateBinding Padding}">
                                <ContentPresenter  Name="HeaderContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"  ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--<TextBlock Text="{TemplateBinding Content}" />-->
                            </Border>
                        </Border>
                        <Canvas>
                            <Thumb Name="PART_HeaderGripper">
                                <Thumb.Style>
                                    <Style TargetType="Thumb">
                                        <Setter Property="Canvas.Right" Value="-9" />
                                        <Setter Property="Width" Value="18" />
                                        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        <Setter Property="Padding" Value="0,0,0,0" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border Padding="{TemplateBinding Padding}" Background="#00FFFFFF">
                                                        <Rectangle  Width="1" HorizontalAlignment="Center"    Fill="{TemplateBinding Background}" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style  TargetType="{x:Type Button}"  >
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="UIElement.Opacity" Value=".8" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="UIElement.Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Padding" Value="8,2"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ContentPresenter Margin="{TemplateBinding Padding}"  Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderModuleArea" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource GlobalBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="4,1"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>



    <Style x:Key="ButtonPageControl1" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel Background="{TemplateBinding Background}">
                        <Path x:Name="path1"  Margin="7,2" Height="10" Width="10" Stretch="Fill" Fill="{DynamicResource GlobalTextBrush}" Data="M 0,0 L 1,1 L 0,2 Z"/>
                        <ContentPresenter  HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="path1" Property="Data" Value="M 0,0 L 1,1 L 2,0 Z"/>
                            <Setter TargetName="path1" Property="Height" Value="10"/>
                            <Setter TargetName="path1" Property="Width" Value="10"/>
                            <Setter TargetName="path1" Property="Margin" Value="7,2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SliderRepeatButton2" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  Background="#1e1e1e" BorderBrush="#111111"  BorderThickness="2"  Height="{TemplateBinding Height}"  CornerRadius="0,4,4,0" Margin="-3,0,0,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton3" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True" Background="#6EA646" BorderBrush="#111111"  BorderThickness="2"  Height="{TemplateBinding Height}" CornerRadius="4,0,0,4" Margin="0,0,-3,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SliderThumbStyle1" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="Border1"  Background="Transparent"  CornerRadius="0" 
                        >
                        <Grid>
                            <Ellipse x:Name="ellipse1" StrokeThickness="0" Stroke="#FF000000" Width="14" Height="14" Opacity="1" SnapsToDevicePixels="false" >
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,0.5">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="#FF4A5B4D" Offset="0.5"/>
                                        <GradientStop Color="#555555" Offset="0.9"/>
                                        <GradientStop Color="#666666" Offset="1"/>
                                    </RadialGradientBrush>

                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse x:Name="ellipse2" StrokeThickness="0.2" Stroke="#FF000000" Width="8" Height="8" Opacity="1" SnapsToDevicePixels="false" Fill="#6EA646" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse2"  Property="Fill" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ellipse1" Property="Fill" Value="Gray"/>
                            <Setter TargetName="ellipse2" Property="Fill" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="LM_SliderControlTemplate2"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Row="1" Grid.Column="2" Margin="2" CornerRadius="1" BorderThickness="1"  Padding="3,0">
                <DockPanel>
                    <Grid>
                        <TextBox FlowDirection="RightToLeft"  Margin="-3,0,0,0" BorderThickness="0,0,0,1"  Background="#E8E8E9" VerticalAlignment="Center"  HorizontalContentAlignment="Center" PreviewKeyDown="NumberValidationTextBox" Text="{Binding ElementName=PART_Track,Path=Value,StringFormat=\{0:0.##\},UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" />
                        <TextBox Visibility="Hidden" FlowDirection="RightToLeft"  Margin="-3,0,0,0" BorderThickness="0,0,0,1"  Background="#E8E8E9" VerticalAlignment="Center"  HorizontalContentAlignment="Center" PreviewKeyDown="NumberValidationTextBox" Text="{Binding ElementName=PART_Track,Path=Value,StringFormat=\{0:0.00\},UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" />
                    </Grid>
                    <TextBlock VerticalAlignment="Center" Foreground="Black" HorizontalAlignment="Left"  Padding="2,0">
                            <Run Text="/" />
                            <Run Text="{Binding  ElementName=PART_Track,Path=Maximum,StringFormat=\{0:0.##\}}"/>
                    </TextBlock>
                </DockPanel>
            </Border>
            <Track x:Name="PART_Track" Grid.Row="1" Grid.Column="1"  ToolTip="{Binding  ElementName=PART_Track,Path=Value,StringFormat=\{0:0.##\}}" >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton3}" Height="10" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton2}"  Height="10"  Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle1}"  />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>




    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Width" Value="22"  />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ContentPresenter  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#BEE6FD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style  x:Key="UpDownSlider" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="SmallChange" Value="1" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="#DDDDDD"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="White">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0"  Background="White" CornerRadius="3,0,0,3" BorderBrush="#DDDDDD" BorderThickness="2,2,0,2">
                                <TextBox  Foreground="{TemplateBinding Foreground}" Margin="5,0" Background="Transparent" PreviewKeyDown="NumberValidationTextBox" BorderThickness="0,0,0,0" Height="Auto" VerticalAlignment="Stretch"  Text="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Gesture="Up" Command="{x:Static Slider.IncreaseSmall}" Key="Up" />
                                        <KeyBinding Gesture="Down" Command="{x:Static Slider.DecreaseSmall}" />
                                        <KeyBinding Gesture="PageUp" Command="{x:Static Slider.IncreaseLarge}" />
                                        <KeyBinding Gesture="PageDown" Command="{x:Static Slider.DecreaseLarge}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </Border>
                            <Border  Name="borderUp" Grid.Column="1"  CornerRadius="0,2,2,0" >
                                <UniformGrid Columns="1">
                                    <RepeatButton  Background="#DDDDDD" Command="{x:Static Slider.IncreaseSmall}"  Style="{StaticResource RepeatButtonStyle}" BorderThickness="0,0,0,0">
                                        <Path Data="M0,2 L5,-4 10,2 "  Fill="Black"  Margin="0,4,0,0" />
                                    </RepeatButton>
                                    <RepeatButton  Background="#DDDDDD" Command="{x:Static Slider.DecreaseSmall}"  Style="{StaticResource RepeatButtonStyle}"  BorderThickness="0,00,0,0">
                                        <Path Data="M0,-4 L5,2 10,-4 " Fill="Black" Margin="0,4,0,0"    />
                                    </RepeatButton>
                                </UniformGrid>
                            </Border>
                            <Border x:Name="TrackBackground" Visibility="Collapsed">
                                <Rectangle x:Name="PART_SelectionRange" Visibility="Collapsed" />
                            </Border>
                            <Thumb x:Name="Thumb" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>