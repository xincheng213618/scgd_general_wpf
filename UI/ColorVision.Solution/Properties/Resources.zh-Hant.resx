<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoRelatedItemsFound" xml:space="preserve">
    <value>未找到相關項目</value>
  </data>
  <data name="RecentUsedContent" xml:space="preserve">
    <value>最近使用的內容</value>
  </data>
  <data name="RecentFiles" xml:space="preserve">
    <value>最近使用過的檔案(_F)</value>
  </data>
  <data name="SearchProjectFiles" xml:space="preserve">
    <value>搜尋工程文件</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>打開</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>導入</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>匯出</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>創建</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>應用</value>
  </data>
  <data name="OpenSolution" xml:space="preserve">
    <value>打開工程</value>
  </data>
  <data name="OpenItem" xml:space="preserve">
    <value>打開專案</value>
  </data>
  <data name="OpenLocalProjectOrFile" xml:space="preserve">
    <value>開啟本地的項目或文件</value>
  </data>
  <data name="NewSolution" xml:space="preserve">
    <value>新建工程</value>
  </data>
  <data name="NewProjectFormat" xml:space="preserve">
    <value>新工程格式</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="ProjectSettings" xml:space="preserve">
    <value>工程設定</value>
  </data>
  <data name="Property" xml:space="preserve">
    <value>屬性</value>
  </data>
  <data name="Reseted" xml:space="preserve">
    <value>已重置</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>重新整理</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="ConfigureNewProject" xml:space="preserve">
    <value>配置新工程</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>項目名稱</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>工程</value>
  </data>
  <data name="ClearCache" xml:space="preserve">
    <value>清除快取</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜尋</value>
  </data>
  <data name="CreateProject" xml:space="preserve">
    <value>創建工程</value>
  </data>
  <data name="DefaultExportStorageFormat" xml:space="preserve">
    <value>預設導出儲存格式</value>
  </data>
  <data name="CreateNewProjectOrFile" xml:space="preserve">
    <value>建立一個新的專案或文件</value>
  </data>
  <data name="SelectProjectSaveLocation" xml:space="preserve">
    <value>選擇項目保存位置</value>
  </data>
  <data name="MenuCopyFullPath" xml:space="preserve">
    <value>複製完整路徑(U)</value>
  </data>
  <data name="MenuOpenContainingFolder" xml:space="preserve">
    <value>打開所在的資料夾(O)</value>
  </data>
  <data name="MenuOpenFileInExplorer" xml:space="preserve">
    <value>在檔案總管中開啟資料夾(X)</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>新資料夾</value>
  </data>
  <data name="FolderDeleteSign" xml:space="preserve">
    <value>及其所有內容將永久刪除。</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="MenuOpen" xml:space="preserve">
    <value>打開(_O)</value>
  </data>
  <data name="MenuProperty" xml:space="preserve">
    <value>屬性(_R)</value>
  </data>
  <data name="MenuAdd" xml:space="preserve">
    <value>添加(_D)</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>密碼</value>
  </data>
  <data name="FillPassword" xml:space="preserve">
    <value>請輸入密碼</value>
  </data>
  <data name="FillAccount" xml:space="preserve">
    <value>請輸入帳號</value>
  </data>
  <data name="AccountLogin" xml:space="preserve">
    <value>賬號登入</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>賬號</value>
  </data>
  <data name="Sign_out" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Sign_in" xml:space="preserve">
    <value>登入</value>
  </data>
  <data name="Create_an_account" xml:space="preserve">
    <value>創建一個帳號</value>
  </data>
</root>